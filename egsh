#!/bin/bash

#   0. Gather EGSH current running context
#   1. Print egsh version
#   2.2 Set .egsh with current context
#   3. Export Variables
#   4. Run Delay Command activity


#   0. Gather EGSH current running context

#SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
EGSH_DIR=$( cd -- "$( dirname -- $(readlink -f "${BASH_SOURCE[0]}") )" &> /dev/null && pwd )
EGSH_OWNER_ID=$(stat -c %u $EGSH_DIR)
EGSH_RETURN=0

#HOME
#├── ALL -> /mnt/ALL
#├── .egsh
#│   ├── dcmd
#│   ├── egsh -> /usr/local/lib/egsh
#│   ├── sync
#│   └── include
UENV=$EGSH_DIR                         # 2.1
UNAME=$USER                         # 2.1
EGSH_USR_DIR=$UENV/.egsh           #
EGSH_USR_DCMD=$UENV/.egsh/dcmd     # local user 
EGSH_USR_INC=$UENV/.egsh/include   # local user 
EGSH_USR_SHSRC=$UENV/.egsh/shsrc  # Set 
EGSH_USR_ESYNC=$UENV/.egsh/sync   # for local user

#egsh
#├── core
#├── lib
#└── src
#    └── sync
EGSH_CTX_CORE=$EGSH_DIR/core
EGSH_CTX_LIB=$EGSH_DIR/lib
EGSH_CTX_SRC=$EGSH_DIR/src   
#EGSH_CTX_ESYNC=$EGSH_DIR/src/esync
EGSH_CTX_ESYNC=$EGSH_DIR/sync

#egsh
#├── egsh
#├── core
#├── lib
#│   ├── CORE
#│   ├── DCMD
#│   ├── ENV
#│   ├── ESYNC
#│   ├── PKG
#│   └── SRC
EGSH_CTX_CORE_LIB=$EGSH_CTX_LIB/CORE
EGSH_CTX_ESYNC_LIB=$EGSH_CTX_LIB/ESYNC 
EGSH_CTX_DCMD_LIB=$EGSH_CTX_LIB/DCMD
EGSH_CTX_PKG_LIB=$EGSH_CTX_LIB/CORE 



#   1. Print egsh version
echo "<< EGSH >>"
#if [ ! -z "$SUDO_COMMAND" ] && [ ! -z "$SUDO_USER" ] ; then	
#	#echo "SCOMMAND = $SUDO_COMMAND , SUSER = $SUDO_USER"
#	echo "$SUDO_COMMAND" | grep -q "egsh" ; 
#	SCBOOL=$?
#	echo "$SUDO_USER" | grep -vq "root" ; 
#	SUBOOL=$?
#	#echo "SCBOOL = $SCBOOL, SUBOOL = $SUBOOL"
#
#	if [ $SCBOOL -eq 0 ] && [ $SUBOOL -eq 0 ] ; then
#		# Change directory for $UENV
#		UENV=$( getent passwd "$SUDO_USER" | cut -d: -f6 )
#		UNAME=$SUDO_USER
#	fi
#fi

#   2.2 Set .egsh with current context
if [ ! -d "$UENV/.egsh" ] ; 
then 
	echo "$UENV/.egsh not exist! create .egsh "
	if ( test -d "$EGSH_DIR" )
	then
		mkdir -p $UENV/.egsh/dcmd
		mkdir -p $UENV/.egsh/include
		mkdir -p $UENV/.egsh/sync
		mkdir -p $UENV/.egsh/shsrc
#        ln -s $EGSH_DIR $UENV/.egsh/egsh
#		echo "$EGSH_DIR copied"
	else	
        echo "$EGSH_DIR corrupted, Reinstall package"
		exit -1
	fi
else 
	#echo "$UENV/.egsh exist! Set .egsh with current context " 
    rm -f $UENV/.egsh/dcmd/*
    rm $UENV/.egsh/egsh
    #ln -s $EGSH_DIR $UENV/.egsh/egsh
fi

#   3. Export Variables
export EGSH_DIR ;
export EGSH_VERSION ;
export EGSH_USR_DIR ;
export EGSH_USR_INC ;
export EGSH_USR_SHSRC ;
export EGSH_USR_ESYNC ;
export EGSH_USR_DCMD ;
export EGSH_CTX_SRC ;
export EGSH_CTX_ESYNC ;
export EGSH_CTX_ESYNC_LIB ;    
export EGSH_CTX_DCMD_LIB ;
export EGSH_CTX_PKG_LIB ;

############## CORE EXCUTION ###############
$EGSH_CTX_CORE/CORE $@
EGSH_RETURN=$?
############## CORE EXCUTION ###############

#   4. Run Delay Command activity
if [ -d $EGSH_USR_DCMD ] 
then
    if ( ls $EGSH_USR_DCMD | grep -q ".*\.sh" ) ; then
        rm -f /tmp/DCMD-$USER
        cp $EGSH_CTX_CORE/DCMD /tmp/DCMD-$USER
        /tmp/DCMD-$USER &
    fi  
fi

